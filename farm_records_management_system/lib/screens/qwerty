import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class FarmRecord {
  DateTime date;
  String cropName;
  String cropType;
  String cropCompany;
  String lotNumber;
  double estimatedHarvest;
  DateTime dateOfHarvest;

  FarmRecord({
    required this.date,
    required this.cropName,
    required this.cropType,
    required this.cropCompany,
    required this.lotNumber,
    required this.estimatedHarvest,
    required this.dateOfHarvest,
  });
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Farm Records',
      theme: ThemeData(
        primarySwatch: Colors.green,
      ),
      home: FarmRecordsPage(),
    );
  }
}

class FarmRecordsPage extends StatefulWidget {
  @override
  _FarmRecordsPageState createState() => _FarmRecordsPageState();
}

class _FarmRecordsPageState extends State<FarmRecordsPage> {
  List<FarmRecord> records = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Farm Records'),
      ),
      body: ListView.builder(
        itemCount: records.length,
        itemBuilder: (context, index) {
          final record = records[index];
          return ListTile(
            title: Text(record.cropName),
            subtitle: Text('Date: ${record.date.toString()}'),
            onTap: () {
              // You can add more details display or edit functionality here
            },
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          _navigateToRecordForm(context);
        },
        child: Icon(Icons.add),
      ),
    );
  }

  void _navigateToRecordForm(BuildContext context) async {
    final result = await Navigator.push(
      context,
      MaterialPageRoute(builder: (context) => RecordFormPage()),
    );

    if (result != null) {
      setState(() {
        records.add(result);
      });
    }
  }
}

class RecordFormPage extends StatefulWidget {
  @override
  _RecordFormPageState createState() => _RecordFormPageState();
}

class _RecordFormPageState extends State<RecordFormPage> {
  final _formKey = GlobalKey<FormState>();
  final _dateController = TextEditingController();
  final _cropNameController = TextEditingController();
  final _cropTypeController = TextEditingController();
  final _cropCompanyController = TextEditingController();
  final _lotNumberController = TextEditingController();
  final _estimatedHarvestController = TextEditingController();
  final _dateOfHarvestController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Farm Record'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              TextFormField(
                controller: _dateController,
                decoration: InputDecoration(labelText: 'Date'),
                keyboardType: TextInputType.datetime,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a valid date';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _cropNameController,
                decoration: InputDecoration(labelText: 'Crop Name'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a crop name';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _cropTypeController,
                decoration: InputDecoration(labelText: 'Crop Type'),
              ),
              TextFormField(
                controller: _cropCompanyController,
                decoration: InputDecoration(labelText: 'Crop Company'),
              ),
              TextFormField(
                controller: _lotNumberController,
                decoration: InputDecoration(labelText: 'Lot Number'),
                keyboardType: TextInputType.number,
              ),
              TextFormField(
                controller: _estimatedHarvestController,
                decoration: InputDecoration(labelText: 'Estimated Harvest'),
                keyboardType: TextInputType.number,
              ),
              TextFormField(
                controller: _dateOfHarvestController,
                decoration: InputDecoration(labelText: 'Date of Harvest'),
                keyboardType: TextInputType.datetime,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a valid date';
                  }
                  return null;
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    final record = FarmRecord(
                      date: DateTime.parse(_dateController.text),
                      cropName: _cropNameController.text,
                      cropType: _cropTypeController.text,
                      cropCompany: _cropCompanyController.text,
                      lotNumber: _lotNumberController.text,
                      estimatedHarvest: double.parse(_estimatedHarvestController.text),
                      dateOfHarvest: DateTime.parse(_dateOfHarvestController.text),
                    );
                    Navigator.pop(context, record);
                  }
                },
                child: Text('Submit'),
              ),
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    _dateController.dispose();
    _cropNameController.dispose();
    _cropTypeController.dispose();
    _cropCompanyController.dispose();
    _lotNumberController.dispose();
    _estimatedHarvestController.dispose();
    _dateOfHarvestController.dispose();
    super.dispose();
  }
}



import 'dart:async';

import 'package:farm_record_app/screens/home_page.dart';
import 'package:flutter/material.dart';


class SplashPage extends StatefulWidget {
  const SplashPage({super.key});

  @override
  State<SplashPage> createState() => _SplashPageState();
}

class _SplashPageState extends State<SplashPage> {
  @override
  void initState() {
    super.initState();
    Timer(
        Duration(seconds: 1),
        () => Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => HomePage(),
            )));
  }

  @override
  Widget build(BuildContext context) {
    return Material(
      child: Container(
        decoration: BoxDecoration(
          color: Color(0xFF3388E3C),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(
              Icons.shopping_cart,
              size: 200,
              color: Colors.white,
            ),
            Text(
              "Freshify",
              style: TextStyle(
                color: Colors.white,
                fontSize: 40,
                fontWeight: FontWeight.bold,
                fontStyle: FontStyle.italic,
              ),
            )
          ],
        ),
      ),
    );
  }
}
